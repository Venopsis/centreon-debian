name: NPM publish
description: This publishes a package to NPM and creates a PR to update the package version

inputs:
  directory:
    description: The package directory
    required: true
  pat:
    description: The Github PAT
    required: true
  npm_token:
    description: The NPM token
    required: true
  package:
    description: The frontend package
    required: true
  version:
    description: The version
    default: latest
  release_branch:
    description: The release branch
    required: true
  release_type:
    description: Is this a stable release?
    default: "stable"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        token: ${{ inputs.pat }}

    - uses: actions/setup-node@v3
      with:
        node-version: 17

    - name: Configure tag
      run: |
        [[ ${{ inputs.release_type }} = "stable" ]] && echo "TAG=${{ inputs.version }}" >> $GITHUB_ENV || echo "TAG=${{ github.head_ref }}" >> $GITHUB_ENV
      shell: bash

    - name: Update JS config version
      run: |
        echo ${{ env.TAG }}
        [[ ${{ inputs.release_type }} = "stable" ]] && npm version patch --legacy-peer-deps || npm version prerelease --preid ${{ github.head_ref }} --legacy-peer-deps
        VERSION=$(node -p "require('./package.json').version")
        rm ../../package-lock.json
        echo "VERSION=$VERSION" >> $GITHUB_ENV
      working-directory: ${{ env.directory }}
      shell: bash

    - name: Configure git
      run: |
        git config user.email "technique-ci@centreon.com"
        git config user.name "technique-ci"
      shell: bash

    - name: Defining commit message
      id: commit_message
      run: |
        [[ ${{ inputs.release_type }} = "stable" ]] && echo "commit_message="THIS IS A TEST chore: release $VERSION"" >> $GITHUB_OUTPUT || echo "commit_message="THIS IS A TEST chore: pre-release $VERSION"" >> $GITHUB_OUTPUT
      shell: bash

    - name: Commit and push changes
      if: ${{ startsWith(github.head_ref, 'MON') }}
      run: |
        git pull origin MON-improve-npm-publication-to-stable-state-test-push --allow-unrelated-histories
        git add .
        git commit -m "${{ steps.commit_message.outputs.commit_message }}"
        git push origin MON-improve-npm-publication-to-stable-state-test-push
      shell: bash

    - name: Publish package to NPM (${{ env.TAG }})
      uses: JS-DevTools/npm-publish@v1
      with:
        access: public
        package: ${{ env.directory }}/package.json
        tag: ${{ env.TAG }}
        token: ${{ inputs.npm_token }}