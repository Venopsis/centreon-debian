name: "rpm-delivery"
description: "Package RPM Centreon"
inputs:
  module_name:
    description: "The package module name"
    required: true
  distrib:
    description: "The distribution used for packaging"
    required: true
  version:
    description: "Centreon packaged version"
    required: true
  cache_key:
    description: "The cached package key"
    required: true
  stability:
    description: "The package stability (stable, testing, unstable)"
    required: true
  artifactory_token:
    description: "Artifactory token"
    required: true

runs:
  using: "composite"
  steps:
    - name: Use cache RPM files
      uses: actions/cache@v3
      with:
        path: ./*.rpm
        key: ${{ inputs.cache_key }}
        fail-on-cache-miss: true

    - uses: jfrog/setup-jfrog-cli@v3
      env:
        JF_URL: https://centreon.jfrog.io
        JF_ACCESS_TOKEN: ${{ inputs.artifactory_token }}

    - name: Publish RPMs
      run: |
        FILES="*.rpm"

        for FILE in $FILES
        do
          echo "[DEBUG] - File: $FILE"

          if [ -z "${{ inputs.distrib }}" ]; then
            DISTRIB=$(echo $FILE | grep -oP 'el[0-9]' || echo '')
          else
            DISTRIB="${{ inputs.distrib }}"
          fi

          if [ -z "${DISTRIB}" ]; then
            echo "package distribution not set"
            exit 1
          fi

          if [ -z "${{ inputs.module_name }}" ]; then
            echo "module name is required"
            exit 1
          fi

          ARCH=$(echo $FILE | grep -oP '(x86_64|noarch)')

          echo "[DEBUG] - Version: ${{ inputs.version }}"
          echo "[DEBUG] - Distrib: $DISTRIB"
          echo "[DEBUG] - Arch: $ARCH"

          MAJOR=${{ inputs.version }}

          if [ "${{ inputs.stability }}" == "stable" ]; then
            jf rt upload "$FILE" "rpm-standard/$MAJOR/$DISTRIB/${{ inputs.stability }}/$ARCH/"
          else
            jf rt upload "$FILE" "rpm-standard/$MAJOR/$DISTRIB/${{ inputs.stability }}/$ARCH/${{ inputs.module_name }}/" --sync-deletes="rpm-standard/$MAJOR/$DISTRIB/${{ inputs.stability }}/$ARCH/${{ inputs.module_name }}/"
          fi
          
        done
      shell: bash
